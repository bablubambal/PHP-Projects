{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bablu\\\\Downloads\\\\React-Flask-Movie-Recommendation-App-main\\\\React-Flask-Movie-Recommendation-App-main\\\\movie-recommender-app\\\\src\\\\Pages\\\\SearchResult.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Components/styles/SearchResultsStyles.css\";\nimport MovieCard from \"./Components/MovieCard\";\nimport NavBar from \"./Components/NavBar\";\nimport ReactPlayer from \"react-player\";\nimport Footer from \"./Components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = () => {\n  _s();\n\n  const params = useParams();\n  const apiKey = \"api_key=b97316ed479ee4226afefc88d1792909\";\n  const inputValue = params.id; // retrieving the searched movie name\n\n  const [searchedMovie, setSearchedMovie] = useState({});\n  const [recommendedMovies, setRecommendedMovies] = useState([{}]);\n  const [castMembers, setCastMembers] = useState([{}]);\n  const [genreList, setGenreList] = useState([{}]);\n  const [currGenre, setCurrGenre] = useState([{}]);\n  const [videoData, setVideoData] = useState([]);\n  const [playTrailer, setPlayTrailer] = useState(0);\n\n  const gotCast = castData => {\n    setCastMembers([]);\n    let counter = 5;\n\n    for (let cast of castData) {\n      setCastMembers(castMembers => [...castMembers, cast]);\n      counter--;\n      if (counter === 0) break;\n    }\n  };\n\n  const gotVideo = data => {\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setVideoData(trailer ? trailer : data.videos.results[0]);\n    }\n  };\n\n  const gotRecommendedData = apiData => {\n    setRecommendedMovies([]);\n    let counter = 16; // getting data for each of the recommened movies\n\n    for (let movie of apiData.movies) {\n      fetch(`https://api.themoviedb.org/3/search/movie?${apiKey}&query=${movie}`).then(Response => Response.json().then(data => setRecommendedMovies(recommendedMovies => [...recommendedMovies, data.results[0]])));\n      counter--;\n      if (counter === 0) break;\n    }\n  };\n\n  useEffect(() => {\n    const gotTMDBData = apiData => {\n      const realMovieData = apiData.results[0];\n      setCurrGenre([]);\n      setCurrGenre(realMovieData.genre_ids);\n      setSearchedMovie(realMovieData);\n      fetch(`https://api.themoviedb.org/3/movie/${realMovieData.id}/credits?${apiKey}`).then(Response => Response.json().then(data => gotCast(data.cast)));\n      fetch(`https://api.themoviedb.org/3/movie/${realMovieData.id}?${apiKey}&append_to_response=videos`).then(Response => Response.json().then(data => gotVideo(data)));\n    }; // getting data for the searched movie from tmdb\n\n\n    fetch(`https://api.themoviedb.org/3/search/movie?${apiKey}&query=${inputValue}`).then(Response => Response.json().then(data => gotTMDBData(data))); // getting list of recommended movie from our flask server\n\n    fetch(`/api/similarity/${inputValue}`).then(Response => Response.json().then(data => gotRecommendedData(data))); // getting the list of all genres\n\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?${apiKey}`).then(Response => Response.json().then(data => setGenreList(data.genres)));\n  }, [inputValue]\n  /*Making api call whenever the searched movie changes */\n  );\n\n  const RenderMovies = () => recommendedMovies.map(movie => {\n    if (movie) {\n      return /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id + movie.original_title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  const RenderTrailer = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: `https://www.youtube.com/watch?v=${videoData.key}-U`,\n        playing: true,\n        width: \"100%\",\n        height: \"100%\",\n        controls: true,\n        className: \"youtube-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  };\n\n  const displayGenre = () => currGenre.map((movieId, ind) => {\n    if (ind >= 3) return null;\n\n    if (movieId) {\n      for (let obj of genreList) {\n        if (obj.id === movieId) {\n          if (ind === 2) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: obj.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 36\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [obj.name, \",\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this);\n          }\n        }\n      }\n    } else {\n      return null;\n    }\n\n    return null;\n  });\n\n  const imgLink = \"https://image.tmdb.org/t/p/original\";\n  const backdropPath = \"https://image.tmdb.org/t/p/w1280\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${backdropPath}${searchedMovie.backdrop_path})`\n    },\n    className: \"MainBackGround\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isHome: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container trailerContainer\",\n      children: [videoData && playTrailer ? RenderTrailer() : null\n      /*Rendering the trailer*/\n      , /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container .movie-details\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 left-box col-md-push-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"topTitle-Movie\",\n              children: [searchedMovie.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"overviewContent\",\n              children: searchedMovie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Cast: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"casting\",\n              children: castMembers.map(member => {\n                if (member) {\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: ` https://en.wikipedia.org/wiki/${member.name}`,\n                    target: \"_blank\",\n                    rel: \"noreferrer\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: member.profile_path ? `${imgLink}${member.profile_path}` : \"\",\n                      title: member.name,\n                      alt: \"mainPhoto\"\n                    }, JSON.stringify(member.cast_id + member.id), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this);\n                }\n\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Rating\", \" : \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), searchedMovie.vote_average, \"/10 \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" Release Date \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), \" : \", \" \", searchedMovie.release_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), \" : \", currGenre ? displayGenre() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"trailer-bttn \",\n                onClick: () => setPlayTrailer(true),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this), \" Watch Trailer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-md-pull-6 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"main-img\",\n              src: `https://image.tmdb.org/t/p/w500${searchedMovie.poster_path}`,\n              alt: \"Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: playTrailer ? \"DisplayOn\" : \"DisplayOFF\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-bttn\",\n        onClick: () => setPlayTrailer(false),\n        children: \"Close Trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid recommendedMovies\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \" container RecommendHeading\",\n        children: \"Recommended Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container recommendedGrid\",\n        children: RenderMovies()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchResult, \"8Wygw44KNffOJ+tohULiQWfJMXw=\", false, function () {\n  return [useParams];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"names":["useEffect","useState","useParams","MovieCard","NavBar","ReactPlayer","Footer","SearchResult","params","apiKey","inputValue","id","searchedMovie","setSearchedMovie","recommendedMovies","setRecommendedMovies","castMembers","setCastMembers","genreList","setGenreList","currGenre","setCurrGenre","videoData","setVideoData","playTrailer","setPlayTrailer","gotCast","castData","counter","cast","gotVideo","data","videos","results","trailer","find","vid","name","gotRecommendedData","apiData","movie","movies","fetch","then","Response","json","gotTMDBData","realMovieData","genre_ids","genres","RenderMovies","map","original_title","RenderTrailer","key","displayGenre","movieId","ind","obj","imgLink","backdropPath","backgroundImage","backdrop_path","title","overview","member","profile_path","JSON","stringify","cast_id","vote_average","release_date","poster_path"],"sources":["C:/Users/bablu/Downloads/React-Flask-Movie-Recommendation-App-main/React-Flask-Movie-Recommendation-App-main/movie-recommender-app/src/Pages/SearchResult.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Components/styles/SearchResultsStyles.css\";\r\nimport MovieCard from \"./Components/MovieCard\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Footer from \"./Components/Footer\";\r\n\r\nconst SearchResult = () => {\r\n    const params = useParams();\r\n    const apiKey = \"api_key=b97316ed479ee4226afefc88d1792909\";\r\n    const inputValue = params.id; // retrieving the searched movie name\r\n    const [searchedMovie, setSearchedMovie] = useState({});\r\n    const [recommendedMovies, setRecommendedMovies] = useState([{}]);\r\n    const [castMembers, setCastMembers] = useState([{}]);\r\n    const [genreList, setGenreList] = useState([{}]);\r\n    const [currGenre, setCurrGenre] = useState([{}]);\r\n    const [videoData, setVideoData] = useState([]);\r\n    const [playTrailer, setPlayTrailer] = useState(0);\r\n    const gotCast = (castData) => {\r\n        setCastMembers([]);\r\n\r\n        let counter = 5;\r\n        for (let cast of castData) {\r\n            setCastMembers((castMembers) => [...castMembers, cast]);\r\n            counter--;\r\n            if (counter === 0) break;\r\n        }\r\n    };\r\n    const gotVideo = (data) => {\r\n        if (data.videos && data.videos.results) {\r\n            const trailer = data.videos.results.find(\r\n                (vid) => vid.name === \"Official Trailer\"\r\n            );\r\n\r\n            setVideoData(trailer ? trailer : data.videos.results[0]);\r\n        }\r\n    };\r\n\r\n    const gotRecommendedData = (apiData) => {\r\n        setRecommendedMovies([]);\r\n        let counter = 16;\r\n        // getting data for each of the recommened movies\r\n        for (let movie of apiData.movies) {\r\n            fetch(\r\n                `https://api.themoviedb.org/3/search/movie?${apiKey}&query=${movie}`\r\n            ).then((Response) =>\r\n                Response.json().then((data) =>\r\n                    setRecommendedMovies((recommendedMovies) => [\r\n                        ...recommendedMovies,\r\n                        data.results[0],\r\n                    ])\r\n                )\r\n            );\r\n            counter--;\r\n            if (counter === 0) break;\r\n        }\r\n    };\r\n\r\n    useEffect(\r\n        () => {\r\n            const gotTMDBData = (apiData) => {\r\n                const realMovieData = apiData.results[0];\r\n                setCurrGenre([]);\r\n                setCurrGenre(realMovieData.genre_ids);\r\n\r\n                setSearchedMovie(realMovieData);\r\n                fetch(\r\n                    `https://api.themoviedb.org/3/movie/${realMovieData.id}/credits?${apiKey}`\r\n                ).then((Response) =>\r\n                    Response.json().then((data) => gotCast(data.cast))\r\n                );\r\n\r\n                fetch(\r\n                    `https://api.themoviedb.org/3/movie/${realMovieData.id}?${apiKey}&append_to_response=videos`\r\n                ).then((Response) =>\r\n                    Response.json().then((data) => gotVideo(data))\r\n                );\r\n            };\r\n            // getting data for the searched movie from tmdb\r\n            fetch(\r\n                `https://api.themoviedb.org/3/search/movie?${apiKey}&query=${inputValue}`\r\n            ).then((Response) =>\r\n                Response.json().then((data) => gotTMDBData(data))\r\n            );\r\n            // getting list of recommended movie from our flask server\r\n            fetch(`/api/similarity/${inputValue}`).then((Response) =>\r\n                Response.json().then((data) => gotRecommendedData(data))\r\n            );\r\n            // getting the list of all genres\r\n            fetch(\r\n                `https://api.themoviedb.org/3/genre/movie/list?${apiKey}`\r\n            ).then((Response) =>\r\n                Response.json().then((data) => setGenreList(data.genres))\r\n            );\r\n        },\r\n        [inputValue] /*Making api call whenever the searched movie changes */\r\n    );\r\n\r\n    const RenderMovies = () =>\r\n        recommendedMovies.map((movie) => {\r\n            if (movie) {\r\n                return (\r\n                    <MovieCard\r\n                        key={movie.id + movie.original_title}\r\n                        movie={movie}\r\n                    />\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        });\r\n    const RenderTrailer = () => {\r\n        return (\r\n            <div>\r\n                <ReactPlayer\r\n                    url={`https://www.youtube.com/watch?v=${videoData.key}-U`}\r\n                    playing={true}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    controls={true}\r\n                    className=\"youtube-container\"\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n    const displayGenre = () =>\r\n        currGenre.map((movieId, ind) => {\r\n            if (ind >= 3) return null;\r\n            if (movieId) {\r\n                for (let obj of genreList) {\r\n                    if (obj.id === movieId) {\r\n                        if (ind === 2) {\r\n                            return <span>{obj.name}</span>;\r\n                        } else {\r\n                            return (\r\n                                <span>\r\n                                    {obj.name}\r\n                                    {\",\"}{\" \"}\r\n                                </span>\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    const imgLink = \"https://image.tmdb.org/t/p/original\";\r\n    const backdropPath = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${backdropPath}${searchedMovie.backdrop_path})`,\r\n            }}\r\n            className=\"MainBackGround\"\r\n        >\r\n            <NavBar isHome={true} />\r\n\r\n            <div className=\"container trailerContainer\">\r\n                {\r\n                    videoData && playTrailer\r\n                        ? RenderTrailer()\r\n                        : null /*Rendering the trailer*/\r\n                }\r\n                <div className=\"container .movie-details\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6 left-box col-md-push-6\">\r\n                            <h1 className=\"topTitle-Movie\">\r\n                                {searchedMovie.title}{\" \"}\r\n                            </h1>\r\n\r\n                            <p className=\"overviewContent\">\r\n                                {searchedMovie.overview}\r\n                            </p>\r\n                            <p>Cast: </p>\r\n                            <div className=\"casting\">\r\n                                {castMembers.map((member) => {\r\n                                    if (member) {\r\n                                        return (\r\n                                            <a\r\n                                                href={` https://en.wikipedia.org/wiki/${member.name}`}\r\n                                                target=\"_blank\"\r\n                                                rel=\"noreferrer\"\r\n                                            >\r\n                                                {\" \"}\r\n                                                <img\r\n                                                    key={JSON.stringify(\r\n                                                        member.cast_id +\r\n                                                            member.id\r\n                                                    )}\r\n                                                    src={\r\n                                                        member.profile_path\r\n                                                            ? `${imgLink}${member.profile_path}`\r\n                                                            : \"\"\r\n                                                    }\r\n                                                    title={member.name}\r\n                                                    alt=\"mainPhoto\"\r\n                                                />\r\n                                            </a>\r\n                                        );\r\n                                    }\r\n                                    return null;\r\n                                })}\r\n                            </div>\r\n\r\n                            <div>\r\n                                <b>Rating{\" : \"}</b>\r\n                                {searchedMovie.vote_average}\r\n                                {\"/10 \"}\r\n\r\n                                <i className=\"fa-solid fa-star\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <b> Release Date </b>\r\n                                {\" : \"} {searchedMovie.release_date}\r\n                            </div>\r\n                            <div>\r\n                                <b>Genres</b>\r\n                                {\" : \"}\r\n                                {currGenre ? displayGenre() : null}\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    className=\"trailer-bttn \"\r\n                                    onClick={() => setPlayTrailer(true)}\r\n                                >\r\n                                    <i className=\"fa-solid fa-play\"></i>\r\n                                    {\" Watch Trailer\"}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-md-pull-6 text-center\">\r\n                            <img\r\n                                className=\"main-img\"\r\n                                src={`https://image.tmdb.org/t/p/w500${searchedMovie.poster_path}`}\r\n                                alt=\"Movie\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/*Trailer Close Button */}\r\n            <div className={playTrailer ? \"DisplayOn\" : \"DisplayOFF\"}>\r\n                <button\r\n                    className=\"close-bttn\"\r\n                    onClick={() => setPlayTrailer(false)}\r\n                >\r\n                    Close Trailer\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"container-fluid recommendedMovies\">\r\n                <h2 className=\" container RecommendHeading\">\r\n                    Recommended Movies\r\n                </h2>\r\n                {/*Rendering the recommended movie cards */}\r\n                <div className=\"container recommendedGrid\">\r\n                    {RenderMovies()}\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResult;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,6CAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;EACA,MAAMO,MAAM,GAAG,0CAAf;EACA,MAAMC,UAAU,GAAGF,MAAM,CAACG,EAA1B,CAHuB,CAGO;;EAC9B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1D;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;EACA,MAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;EACA,MAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA1C;EACA,MAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,CAAD,CAA9C;;EACA,MAAMyB,OAAO,GAAIC,QAAD,IAAc;IAC1BV,cAAc,CAAC,EAAD,CAAd;IAEA,IAAIW,OAAO,GAAG,CAAd;;IACA,KAAK,IAAIC,IAAT,IAAiBF,QAAjB,EAA2B;MACvBV,cAAc,CAAED,WAAD,IAAiB,CAAC,GAAGA,WAAJ,EAAiBa,IAAjB,CAAlB,CAAd;MACAD,OAAO;MACP,IAAIA,OAAO,KAAK,CAAhB,EAAmB;IACtB;EACJ,CATD;;EAUA,MAAME,QAAQ,GAAIC,IAAD,IAAU;IACvB,IAAIA,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYC,OAA/B,EAAwC;MACpC,MAAMC,OAAO,GAAGH,IAAI,CAACC,MAAL,CAAYC,OAAZ,CAAoBE,IAApB,CACXC,GAAD,IAASA,GAAG,CAACC,IAAJ,KAAa,kBADV,CAAhB;MAIAd,YAAY,CAACW,OAAO,GAAGA,OAAH,GAAaH,IAAI,CAACC,MAAL,CAAYC,OAAZ,CAAoB,CAApB,CAArB,CAAZ;IACH;EACJ,CARD;;EAUA,MAAMK,kBAAkB,GAAIC,OAAD,IAAa;IACpCxB,oBAAoB,CAAC,EAAD,CAApB;IACA,IAAIa,OAAO,GAAG,EAAd,CAFoC,CAGpC;;IACA,KAAK,IAAIY,KAAT,IAAkBD,OAAO,CAACE,MAA1B,EAAkC;MAC9BC,KAAK,CACA,6CAA4CjC,MAAO,UAAS+B,KAAM,EADlE,CAAL,CAEEG,IAFF,CAEQC,QAAD,IACHA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBZ,IAAD,IACjBhB,oBAAoB,CAAED,iBAAD,IAAuB,CACxC,GAAGA,iBADqC,EAExCiB,IAAI,CAACE,OAAL,CAAa,CAAb,CAFwC,CAAxB,CADxB,CAHJ;MAUAL,OAAO;MACP,IAAIA,OAAO,KAAK,CAAhB,EAAmB;IACtB;EACJ,CAlBD;;EAoBA5B,SAAS,CACL,MAAM;IACF,MAAM8C,WAAW,GAAIP,OAAD,IAAa;MAC7B,MAAMQ,aAAa,GAAGR,OAAO,CAACN,OAAR,CAAgB,CAAhB,CAAtB;MACAZ,YAAY,CAAC,EAAD,CAAZ;MACAA,YAAY,CAAC0B,aAAa,CAACC,SAAf,CAAZ;MAEAnC,gBAAgB,CAACkC,aAAD,CAAhB;MACAL,KAAK,CACA,sCAAqCK,aAAa,CAACpC,EAAG,YAAWF,MAAO,EADxE,CAAL,CAEEkC,IAFF,CAEQC,QAAD,IACHA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBZ,IAAD,IAAUL,OAAO,CAACK,IAAI,CAACF,IAAN,CAAtC,CAHJ;MAMAa,KAAK,CACA,sCAAqCK,aAAa,CAACpC,EAAG,IAAGF,MAAO,4BADhE,CAAL,CAEEkC,IAFF,CAEQC,QAAD,IACHA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBZ,IAAD,IAAUD,QAAQ,CAACC,IAAD,CAAvC,CAHJ;IAKH,CAjBD,CADE,CAmBF;;;IACAW,KAAK,CACA,6CAA4CjC,MAAO,UAASC,UAAW,EADvE,CAAL,CAEEiC,IAFF,CAEQC,QAAD,IACHA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBZ,IAAD,IAAUe,WAAW,CAACf,IAAD,CAA1C,CAHJ,EApBE,CAyBF;;IACAW,KAAK,CAAE,mBAAkBhC,UAAW,EAA/B,CAAL,CAAuCiC,IAAvC,CAA6CC,QAAD,IACxCA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBZ,IAAD,IAAUO,kBAAkB,CAACP,IAAD,CAAjD,CADJ,EA1BE,CA6BF;;IACAW,KAAK,CACA,iDAAgDjC,MAAO,EADvD,CAAL,CAEEkC,IAFF,CAEQC,QAAD,IACHA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBZ,IAAD,IAAUZ,YAAY,CAACY,IAAI,CAACkB,MAAN,CAA3C,CAHJ;EAKH,CApCI,EAqCL,CAACvC,UAAD;EAAa;EArCR,CAAT;;EAwCA,MAAMwC,YAAY,GAAG,MACjBpC,iBAAiB,CAACqC,GAAlB,CAAuBX,KAAD,IAAW;IAC7B,IAAIA,KAAJ,EAAW;MACP,oBACI,QAAC,SAAD;QAEI,KAAK,EAAEA;MAFX,GACSA,KAAK,CAAC7B,EAAN,GAAW6B,KAAK,CAACY,cAD1B;QAAA;QAAA;QAAA;MAAA,QADJ;IAMH,CAPD,MAOO;MACH,OAAO,IAAP;IACH;EACJ,CAXD,CADJ;;EAaA,MAAMC,aAAa,GAAG,MAAM;IACxB,oBACI;MAAA,uBACI,QAAC,WAAD;QACI,GAAG,EAAG,mCAAkC/B,SAAS,CAACgC,GAAI,IAD1D;QAEI,OAAO,EAAE,IAFb;QAGI,KAAK,EAAC,MAHV;QAII,MAAM,EAAC,MAJX;QAKI,QAAQ,EAAE,IALd;QAMI,SAAS,EAAC;MANd;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH,CAbD;;EAcA,MAAMC,YAAY,GAAG,MACjBnC,SAAS,CAAC+B,GAAV,CAAc,CAACK,OAAD,EAAUC,GAAV,KAAkB;IAC5B,IAAIA,GAAG,IAAI,CAAX,EAAc,OAAO,IAAP;;IACd,IAAID,OAAJ,EAAa;MACT,KAAK,IAAIE,GAAT,IAAgBxC,SAAhB,EAA2B;QACvB,IAAIwC,GAAG,CAAC/C,EAAJ,KAAW6C,OAAf,EAAwB;UACpB,IAAIC,GAAG,KAAK,CAAZ,EAAe;YACX,oBAAO;cAAA,UAAOC,GAAG,CAACrB;YAAX;cAAA;cAAA;cAAA;YAAA,QAAP;UACH,CAFD,MAEO;YACH,oBACI;cAAA,WACKqB,GAAG,CAACrB,IADT,EAEK,GAFL,EAEU,GAFV;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ;UAMH;QACJ;MACJ;IACJ,CAfD,MAeO;MACH,OAAO,IAAP;IACH;;IACD,OAAO,IAAP;EACH,CArBD,CADJ;;EAwBA,MAAMsB,OAAO,GAAG,qCAAhB;EACA,MAAMC,YAAY,GAAG,kCAArB;EAEA,oBACI;IACI,KAAK,EAAE;MACHC,eAAe,EAAG,uEAAsED,YAAa,GAAEhD,aAAa,CAACkD,aAAc;IADhI,CADX;IAII,SAAS,EAAC,gBAJd;IAAA,wBAMI,QAAC,MAAD;MAAQ,MAAM,EAAE;IAAhB;MAAA;MAAA;MAAA;IAAA,QANJ,eAQI;MAAK,SAAS,EAAC,4BAAf;MAAA,WAEQxC,SAAS,IAAIE,WAAb,GACM6B,aAAa,EADnB,GAEM;MAAK;MAJnB,eAMI;QAAK,SAAS,EAAC,0BAAf;QAAA,uBACI;UAAK,SAAS,EAAC,MAAf;UAAA,wBACI;YAAK,SAAS,EAAC,iCAAf;YAAA,wBACI;cAAI,SAAS,EAAC,gBAAd;cAAA,WACKzC,aAAa,CAACmD,KADnB,EAC0B,GAD1B;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAKI;cAAG,SAAS,EAAC,iBAAb;cAAA,UACKnD,aAAa,CAACoD;YADnB;cAAA;cAAA;cAAA;YAAA,QALJ,eAQI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QARJ,eASI;cAAK,SAAS,EAAC,SAAf;cAAA,UACKhD,WAAW,CAACmC,GAAZ,CAAiBc,MAAD,IAAY;gBACzB,IAAIA,MAAJ,EAAY;kBACR,oBACI;oBACI,IAAI,EAAG,kCAAiCA,MAAM,CAAC5B,IAAK,EADxD;oBAEI,MAAM,EAAC,QAFX;oBAGI,GAAG,EAAC,YAHR;oBAAA,WAKK,GALL,eAMI;sBAKI,GAAG,EACC4B,MAAM,CAACC,YAAP,GACO,GAAEP,OAAQ,GAAEM,MAAM,CAACC,YAAa,EADvC,GAEM,EARd;sBAUI,KAAK,EAAED,MAAM,CAAC5B,IAVlB;sBAWI,GAAG,EAAC;oBAXR,GACS8B,IAAI,CAACC,SAAL,CACDH,MAAM,CAACI,OAAP,GACIJ,MAAM,CAACtD,EAFV,CADT;sBAAA;sBAAA;sBAAA;oBAAA,QANJ;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ;gBAsBH;;gBACD,OAAO,IAAP;cACH,CA1BA;YADL;cAAA;cAAA;cAAA;YAAA,QATJ,eAuCI;cAAA,wBACI;gBAAA,qBAAU,KAAV;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,EAEKC,aAAa,CAAC0D,YAFnB,EAGK,MAHL,eAKI;gBAAG,SAAS,EAAC;cAAb;gBAAA;gBAAA;gBAAA;cAAA,QALJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAvCJ,eA8CI;cAAA,wBACI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,EAEK,KAFL,OAEa1D,aAAa,CAAC2D,YAF3B;YAAA;cAAA;cAAA;cAAA;YAAA,QA9CJ,eAkDI;cAAA,wBACI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,EAEK,KAFL,EAGKnD,SAAS,GAAGmC,YAAY,EAAf,GAAoB,IAHlC;YAAA;cAAA;cAAA;cAAA;YAAA,QAlDJ,eAuDI;cAAA,uBACI;gBACI,SAAS,EAAC,eADd;gBAEI,OAAO,EAAE,MAAM9B,cAAc,CAAC,IAAD,CAFjC;gBAAA,wBAII;kBAAG,SAAS,EAAC;gBAAb;kBAAA;kBAAA;kBAAA;gBAAA,QAJJ,EAKK,gBALL;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QAvDJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAkEI;YAAK,SAAS,EAAC,oCAAf;YAAA,uBACI;cACI,SAAS,EAAC,UADd;cAEI,GAAG,EAAG,kCAAiCb,aAAa,CAAC4D,WAAY,EAFrE;cAGI,GAAG,EAAC;YAHR;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAlEJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ,eA4FI;MAAK,SAAS,EAAEhD,WAAW,GAAG,WAAH,GAAiB,YAA5C;MAAA,uBACI;QACI,SAAS,EAAC,YADd;QAEI,OAAO,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QA5FJ,eAqGI;MAAK,SAAS,EAAC,mCAAf;MAAA,wBACI;QAAI,SAAS,EAAC,6BAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAK,SAAS,EAAC,2BAAf;QAAA,UACKyB,YAAY;MADjB;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QArGJ,eA8GI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QA9GJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkHH,CAnQD;;GAAM3C,Y;UACaL,S;;;KADbK,Y;AAqQN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}